* Tutorials
  * [A quick introduction to data parallelism in Julia](tutorials/quick-introduction/)
  * [Efficient and safe approaches to mutation in data parallelism](tutorials/mutations/)
  * [Concurrency patterns for controlled parallelisms](tutorials/concurrency-patterns/)
  * ðŸ”— [Transducers.jl / Parallel processing tutorial](https://juliafolds.github.io/Transducers.jl/stable/tutorials/tutorial_parallel/)
  * ðŸ”— [Transducers.jl / Splitting a string into words and counting them in parallel](https://juliafolds.github.io/Transducers.jl/stable/tutorials/words/)
  * ðŸ”— [FLoops.jl / Parallel loops](https://juliafolds.github.io/FLoops.jl/stable/tutorials/parallel/)
  * ðŸ”— [FoldsCUDA.jl / Examples](https://juliafolds.github.io/FoldsCUDA.jl/dev/)
* How-to guides
  * [Frequently asked questions](howto/faq/)
  * ðŸ”— [FLoops.jl / How to write X in parallel](https://juliafolds.github.io/FLoops.jl/stable/howto/parallel/)
* References
  * ðŸ”— [FLoops.jl documentation](https://juliafolds.github.io/FLoops.jl/stable/)
  * ðŸ”— [Folds.jl documentation](https://juliafolds.github.io/Folds.jl/stable/)
  * ðŸ”— [ThreadsX.jl documentation](https://tkf.github.io/ThreadsX.jl/dev/)
  * ðŸ”— [Transducers.jl documentation](https://juliafolds.github.io/Transducers.jl/stable/)
  * ðŸ”— [See JuliaFolds organization for more packages](https://github.com/JuliaFolds)
* Explanation
  * [Libraries for parallelism in Julia](explanation/libraries/)
  * [Parallel reductions using semidirect products](explanation/semidirect-products/)
